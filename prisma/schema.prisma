generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Difficulty {
  easy
  medium
  hard
}

model Category {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  color       String?
  icon        String?
  sortOrder   Int      @default(0)
  isDefault   Boolean  @default(false)
  timeLimitSec Int?    // per-category default

  questions   Question[]
  sessions    QuizSession[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Question {
  id          String     @id @default(cuid())
  categoryId  String
  category    Category   @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  text        String
  explanation String?
  difficulty  Difficulty
  type        String     @default("single") // "single" | "multi"
  imageUrl    String?

  options     Option[]

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Option {
  id         String    @id @default(cuid())
  questionId String
  question   Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  text       String
  isCorrect  Boolean   @default(false)
}

model QuizSession {
  id            String    @id @default(cuid())
  attemptId     String    @unique
  categoryId    String
  category      Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  numQuestions  Int
  difficulty    Difficulty?
  timeLimitSec  Int?
  questionIds   Json
  savedAnswers  Json?
  startAt       DateTime  @default(now())
  endAt         DateTime?
  isCompleted   Boolean   @default(false)
  score         Int?      @default(0)
  timeTakenSec  Int?      @default(0)

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
